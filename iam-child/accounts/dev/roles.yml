Parameters:
  TrustedAccountId:
    Type: Number
    Description: "Account ID of trusted account to grant role access"

  RoleNamePrefix:
    Type: String
    Description: "IAM role name prefix"

  InitDeploy:
    Type: String
    Description: "Whether this is an initial deployment or not."


Conditions:
  IsNotInitDeploy:
    Fn::Equals:
      - Ref: InitDeploy
      - false


Resources:
  OrganizationAccountAccessRole:
    Type: "AWS::IAM::Role"
    # Let's not lock us out the org.
    DeletionPolicy: Retain
    Condition: IsNotInitDeploy
    Properties:
      RoleName:
        Fn::Sub: "${RoleNamePrefix}AccessRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS:
                Fn::Sub: "arn:aws:iam::${TrustedAccountId}:root"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  OrganizationAccountAccessUserRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: "${RoleNamePrefix}AccessUserRole"
      MaxSessionDuration: 21600
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS:
                Fn::Sub: "arn:aws:iam::${TrustedAccountId}:root"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSAccountActivityAccess
        - arn:aws:iam::aws:policy/AmazonCognitoPowerUser
        - arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AWSHealthFullAccess
        - arn:aws:iam::aws:policy/AWSLambdaFullAccess
        - arn:aws:iam::aws:policy/AWSOrganizationsReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess   # Grants cloudwatch too
      Policies:
        - PolicyName: "IamRoleManage"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "iam:GenerateCredentialReport"
                  - "iam:GenerateServiceLastAccessedDetails"
                  - "iam:Get*"
                  - "iam:List*"
                  - "iam:SimulateCustomPolicy"
                  - "iam:SimulatePrincipalPolicy"
                  - "iam:PassRole"
                  # These are more dangerous but needed for console based
                  # permission debugging.
                  - "iam:AttachRolePolicy"
                  - "iam:CreatePolicy"
                  - "iam:CreateRole"
                  - "iam:DeleteRole"
                  - "iam:DeleteRolePolicy"
                  - "iam:PutRolePolicy"
                  - "iam:DetachRolePolicy"
                Resource: "*"
        - PolicyName: "AiMl"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "machinelearning:*"
                  - "rekognition:*"
                  - "sagemaker:*"
                Resource: "*"
        - PolicyName: "ApiGateway"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "apigateway:DELETE"
                  - "apigateway:GET"
                  - "apigateway:PATCH"
                  - "apigateway:POST"
                  - "apigateway:PUT"
                Resource: "*"
        - PolicyName: "CloudFormationFullAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "CloudFormation:*"
                Resource: "*"
        - PolicyName: "Events"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "events:*"
                Resource: "*"
        - PolicyName: "KmsRead"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "kms:List*"
                  - "kms:Describe*"
                Resource: "*"
        - PolicyName: "Route53Zones"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "route53:ChangeResourceRecordSets"
                  - "route53:CreateHostedZone"
                  - "route53:DeleteHostedZone"
                  - "route53:UpdateHostedZoneComment"
                  - "route53:CreateHealthCheck"
                  - "route53:UpdateHealthCheck"
                  - "route53:DeleteHealthCheck"
                  - "route53:Get*"
                  - "route53:List*"
                  - "route53:TestDNSAnswer"
                Resource: "*"
        - PolicyName: "S3"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:*"
                  - "s3-object-lambda:*"
                Resource: "*"
        - PolicyName: "SNS"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "sns:*"
                Resource: "*"
        - PolicyName: "SQS"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "sqs:*"
                Resource: "*"
        - PolicyName: "XRay"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "xray:*"
                Resource: "*"


  OrganizationAccountAccessAdminRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: "${RoleNamePrefix}AccessAdminRole"
      MaxSessionDuration: 21600
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS:
                Fn::Sub: "arn:aws:iam::${TrustedAccountId}:root"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess


