Resources:
  OrganizationAccountAccessRole:
    Type: "AWS::IAM::Role"
    # Let's not lock us out the org.
    DeletionPolicy: Retain
    Properties:
      RoleName: OrganizationAccountAccessRole
      AssumeRolePolicyDocument: {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "AWS": "arn:aws:iam::349603509961:root"
            },
            "Action": "sts:AssumeRole",
            "Condition": {}
          }
        ]
      }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  OrganizationAccountAccessUserRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: OrganizationAccountAccessUserRole
      AssumeRolePolicyDocument: {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "AWS": "arn:aws:iam::349603509961:root"
            },
            "Action": "sts:AssumeRole",
            "Condition": {}
          },
          {
            "Effect": "Allow",
            "Principal": {
              "AWS": "arn:aws:iam::227071656313:root"
            },
            "Action": "sts:AssumeRole",
            "Condition": {}
          }
        ]
      }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaFullAccess
        - arn:aws:iam::aws:policy/AmazonCognitoReadOnly
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsReadOnlyAccess
        - arn:aws:iam::aws:policy/IAMReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonSNSReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonSQSReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/AutoScalingReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Policies:
        - PolicyName: "CloudFormationFullAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "CloudFormation:*"
                Resource: "*"
        - PolicyName: "CfnPassRole"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "iam:PassRole"
                Resource:
                  Fn::GetAtt:
                    - CloudFormationDeployRole
                    - Arn
        - PolicyName: "LambdaExecute"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "lambda:InvokeFunction"
                Resource: "*"

  CloudFormationDeployRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: CloudFormationDeployRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "cloudformation.amazonaws.com"
            Action: "sts:AssumeRole"
      # XXX: This is lax but at least everything is in a CFN stack.
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  OrganizationAccountAccessAdminRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: OrganizationAccountAccessAdminRole
      AssumeRolePolicyDocument: {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "AWS": "arn:aws:iam::349603509961:root"
            },
            "Action": "sts:AssumeRole",
            "Condition": {}
          },
          {
            "Effect": "Allow",
            "Principal": {
              "AWS": "arn:aws:iam::227071656313:root"
            },
            "Action": "sts:AssumeRole",
            "Condition": {}
          }
        ]
      }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  # Intended for a single deploy user in prime that can run deploys in different accounts.
  OrganizationAccountAccessDeployRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: OrganizationAccountAccessDeployRole
      AssumeRolePolicyDocument: {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "AWS": "arn:aws:iam::227071656313:root"
            },
            "Action": "sts:AssumeRole",
            "Condition": {}
          }
        ]
      }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess



